
import os
import sys
import excons
from excons.tools import gl
import SCons.Script # pylint: disable=import-error



def GlewName(static=True):
   suffix = "_s" if static else ""
   if static and sys.platform == "win32":
      return "libglew" + suffix
   else:
      return "glew" + suffix

def GlewPath(static=True):
   name = GlewName(static)
   if sys.platform == "win32":
      libname = name + ".lib"
   else:
      libname = "lib" + name + (".a" if static else excons.SharedLibraryLinkExt())
   return excons.OutputBaseDirectory() + "/lib/" + libname

def RequireGlew(env, static=True):
   if static:
      env.Append(CPPDEFINES=["GLEW_STATIC"])
   env.Append(CPPPATH=[excons.OutputBaseDirectory() + "/include"])
   env.Append(LIBPATH=[excons.OutputBaseDirectory() + "/lib"])
   excons.Link(env, GlewPath(static), static=static, force=True, silent=True)


env = excons.MakeBaseEnv()

_static = (excons.GetArgument("glew-static", 1, int) != 0)

# glew.c and include/GL/*.h are generated by running 'make' in auto sub-directory

prjs = [
   {
      "name": GlewName(static=_static),
      "alias": "GLEW",
      "version": "2.2.0",
      "symvis": "hidden",
      "soname": "lib%s.so.2" % GlewName(False),
      "install_name": "lib%s.2.dylib" % GlewName(False),
      "type": "staticlib" if _static else "sharedlib",
      "defs": ["GLEW_STATIC"] if _static else [],
      "srcs": ["src/glew.c"],
      "install": {"include": ["include/GL"]}
   }
]

excons.AddHelpOptions(expat="""GLEW OPTIONS
  glew-static=0|1   : Toggle between static and shared library build [1]""")

excons.DeclareTargets(env, prjs)

SCons.Script.Export("GlewName GlewPath RequireGlew")
